server:
    ingress:
        # -- Enable an ingress resource for the Argo CD server
        enabled: true
        # -- Additional ingress annotations
        annotations:
            kubernetes.io/ingress.class: ENC[AES256_GCM,data:OXeYtCM=,iv:A3cZn+nU0blwD/im78NXoUIQVkMYuogt/EBSjO87/gg=,tag:N8+Ee/wCIOxyxVSxdirzHw==,type:str]
# ####################
# ## Notifications controller
# notifications:
#   # -- Enable notifications controller
#   enabled: true
#   # -- Configures notification services such as slack, email or custom webhook
#   # @default -- See [values.yaml]
#   ## For more information: https://argocd-notifications.readthedocs.io/en/stable/services/overview/
#   notifiers:
#     service.webhook.webhook-notify: |
#       url: http://webhook-notify.priv/notify
#       headers:
#       - name: Content-Type
#         value: application/json
#   # -- The notification template is used to generate the notification content
#   ## For more information: https://argocd-notifications.readthedocs.io/en/stable/templates/
#   templates:
#     template.app-created: |
#       webhook:
#         webhook-notify:
#           method: POST
#           body: |
#             {
#               "service": "telegram",
#               "group": "devops",
#               "message": "<b>service</b>: ArgoCD\n<b>task</b>: create application\n<b>message</b>: Application {{.app.metadata.name}} has been created."
#             }
#     template.app-deleted: |
#       webhook:
#         webhook-notify:
#           method: POST
#           body: |
#             {
#               "service": "telegram",
#               "group": "devops",
#               "message": "<b>service</b>: ArgoCD\n<b>task</b>: create application\n<b>message</b>: Application {{.app.metadata.name}} has been deleted."
#             }
#     template.app-health-degraded: |
#       webhook:
#         webhook-notify:
#           method: POST
#           body: |
#             {
#               "service": "telegram",
#               "group": "devops",
#               "message": "<b>service</b>: ArgoCD\n<b>task</b>: create application\n<b>message</b>: Application {{.app.metadata.name}} has degraded."
#             }
#     template.app-sync-failed: |
#       webhook:
#         webhook-notify:
#           method: POST
#           body: |
#             {
#               "service": "telegram",
#               "group": "devops",
#               "message": "<b>service</b>: ArgoCD\n<b>task</b>: create application\n<b>message</b>: Failed to sync application {{.app.metadata.name}}."
#             }
#     template.app-sync-status-unknown: |
#       webhook:
#         webhook-notify:
#           method: POST
#           body: |
#             {
#               "service": "telegram",
#               "group": "devops",
#               "message": "<b>service</b>: ArgoCD\n<b>task</b>: create application\n<b>message</b>: Application {{.app.metadata.name}} sync status is 'Unknown'"
#             }
#   # -- The trigger defines the condition when the notification should be sent
#   ## For more information: https://argocd-notifications.readthedocs.io/en/stable/triggers/
#   triggers:
#     trigger.on-created: |
#       - description: Application is created.
#         oncePer: app.metadata.name
#         send:
#         - app-created
#         when: "true"
#     trigger.on-deleted: |
#       - description: Application is deleted.
#         oncePer: app.metadata.name
#         send:
#         - app-deleted
#         when: app.metadata.deletionTimestamp != nil
#     trigger.on-health-degraded: |
#       - description: Application has degraded
#         send:
#         - app-health-degraded
#         when: app.status.health.status == 'Degraded'
#     trigger.on-sync-failed: |
#       - description: Application syncing has failed
#         send:
#         - app-sync-failed
#         when: app.status.operationState.phase in ['Error', 'Failed']
#     trigger.on-sync-status-unknown: |
#       - description: Application status is 'Unknown'
#         send:
#         - app-sync-status-unknown
#         when: app.status.sync.status == 'Unknown'
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1g8t7npy9fgyh789534rqv5p2n9y0afynd99r0d3mze2lf68ue9cqwl9mgj
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBFZE5GY1dyZVBGcGdsdEdS
            VWRndFZrd0dNanVXNmdKTnhpOGtRRGFJYmlrCmd6dXVCa3lwbmU0YjlXVzNOUTQ1
            eEh0eWVhRzRCVDFIZ0srend0UE9kY0UKLS0tIGFvNUU0YnRWTmkrZXhpKytGYlNz
            ZkhNcmNnbEVjOWU2d09HZGdkcFpEYWMK56fn3xq2dJqv3PbszbSBDY/hMHZogn2u
            kkdCAuKUYwNyS/hhn6IqOtVM3kEBsI12atDtJ1i2O2VfdF09rUUfvw==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-07-18T19:14:14Z"
    mac: ENC[AES256_GCM,data:pAxdrdV9GRxIc60ODdI/yswSFiJuCNCnWzh6+AQlqKesojnc2eVOJ30KYWpHu3X0zl33XGVF0wabb84DwxoSXOeROefX+58T8XKWn6Yi/8m8pff3/QFwWMy0m95g9A+NrPZFxYAFt47woxnePwd3vxTnMhYKzIIa0pI1be2y3Yg=,iv:1ryrwLNfSe8I1VhPB0pvYONDtMy/JPKPu5qoLEyF8yA=,tag:8GQ4n8k3hcZULAeEnemJnA==,type:str]
    pgp: []
    encrypted_regex: ^(annotations)$
    version: 3.9.0
